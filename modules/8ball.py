# modules/8ball.py
import discord
from discord.ext import commands
import random
import asyncio
from typing import Dict
import time

class EightBall(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.cooldowns: Dict[int, float] = {}
        
        # R√©ponses authentiques de la boule magique (traduites en fran√ßais)
        self.responses = [
            # Positives (10)
            "C'est certain",
            "C'est d√©cid√©ment ainsi",
            "Sans aucun doute",
            "Oui, d√©finitivement",
            "Tu peux t'y fier",
            "Comme je le vois, oui",
            "Tr√®s probablement",
            "Les perspectives sont bonnes",
            "Oui",
            "Les signes pointent vers oui",
            
            # N√©gatives (5)
            "Ne compte pas l√†-dessus",
            "Ma r√©ponse est non",
            "Mes sources disent non",
            "Les perspectives ne sont pas bonnes",
            "Tr√®s douteux",
            
            # Neutres/R√©essaie plus tard (5)
            "R√©ponse floue, r√©essaie",
            "Demande encore plus tard",
            "Mieux vaut ne pas te le dire maintenant",
            "Impossible de pr√©dire maintenant",
            "Concentre-toi et redemande"
        ]
    
    def _check_cooldown(self, user_id: int) -> bool:
        """V√©rifie si l'utilisateur est en cooldown"""
        current_time = time.time()
        if user_id in self.cooldowns:
            time_left = self.cooldowns[user_id] - current_time
            if time_left > 0:
                return False
        return True
    
    def _set_cooldown(self, user_id: int):
        """D√©finit le cooldown pour l'utilisateur"""
        self.cooldowns[user_id] = time.time() + 15
    
    def _get_cooldown_time(self, user_id: int) -> int:
        """Retourne le temps restant du cooldown"""
        current_time = time.time()
        if user_id in self.cooldowns:
            time_left = self.cooldowns[user_id] - current_time
            return max(0, int(time_left))
        return 0

    @discord.app_commands.command(name="8ball", description="Pose une question √† la boule magique !")
    @discord.app_commands.describe(question="Ta question pour la boule magique")
    async def eightball_slash(self, interaction: discord.Interaction, question: str):
        if not self._check_cooldown(interaction.user.id):
            cooldown_time = self._get_cooldown_time(interaction.user.id)
            await interaction.response.send_message(
                f"‚è∞ Tu dois attendre encore {cooldown_time} secondes avant de poser une autre question !",
                ephemeral=True
            )
            return
        
        self._set_cooldown(interaction.user.id)
        response = random.choice(self.responses)
        
        await interaction.response.send_message(f"üé± {response}")

    @commands.command(name="8ball", aliases=["8b", "eightball"])
    async def eightball_prefix(self, ctx, *, question=None):
        if question is None:
            await ctx.reply("‚ùì Tu dois poser une question √† la boule magique !")
            return
        
        if not self._check_cooldown(ctx.author.id):
            cooldown_time = self._get_cooldown_time(ctx.author.id)
            msg = await ctx.reply(f"‚è∞ Tu dois attendre encore {cooldown_time} secondes avant de poser une autre question !")
            await asyncio.sleep(cooldown_time)
            await msg.delete()
            return
        
        self._set_cooldown(ctx.author.id)
        response = random.choice(self.responses)
        
        await ctx.reply(f"üé± {response}")

async def setup(bot):
    await bot.add_cog(EightBall(bot))
